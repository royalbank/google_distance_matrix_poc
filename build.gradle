buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
		wrapperVersion = '1.0.7.RELEASE'
	}
	repositories {
		jcenter()
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
    dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'


sourceCompatibility = 1.8
targetCompatibility = 1.8


jar {
    baseName = 'mya-geo-be'
    version =  '0.1.5'
    manifest {
        attributes('Main-Class': 'geo.Application')
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}



dependencies {
	// Google APIs
	compile("com.google.maps:google-maps-services:0.1.20")
	compile 'se.walkercrou:google-places-api-java:2.1.7'
	
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    
    // end::actuator[]
    testCompile("junit:junit") 
    
    //
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.google.code.gson:gson:2.8.0'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}